ONLINE GROCERY PURCHASING:


1.USER AUTHENTICATION

import React, { useState } from 'react';
import { auth } from './firebase';

const AuthComponent = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleSignUp = async () => {
    try {
      await auth.createUserWithEmailAndPassword(email, password);
    } catch (error) {
      console.error(error.message);
    }
  };

  const handleLogin = async () => {
    try {
      await auth.signInWithEmailAndPassword(email, password);
    } catch (error) {
      console.error(error.message);
    }
  };

  const handleSignOut = () => {
    auth.signOut();
  };

  return (
    <div>
      <h2>User Authentication</h2>
      <input
        type="email"
        placeholder="Email"
        value={email}
        onChange={e => setEmail(e.target.value)}
      />
      <input
        type="password"
        placeholder="Password"
        value={password}
        onChange={e => setPassword(e.target.value)}
      />
      <button onClick={handleSignUp}>Sign Up</button>
      <button onClick={handleLogin}>Login</button>
      <button onClick={handleSignOut}>Sign Out</button>
    </div>
  );
};

export default AuthComponent;



2.PRODUCT LISTING:


import React from 'react';

const ProductList = ({ products }) => {
  return (
    <div className="product-list">
      {products.map(product => (
        <div className="product-card" key={product.id}>
          <img src={product.image} alt={product.name} className="product-image" />
          <div className="product-details">
            <h3 className="product-name">{product.name}</h3>
            <p className="product-description">{product.description}</p>
            <p className="product-price">${product.price}</p>
            {/* Add to cart button */}
            <button className="add-to-cart-btn">Add to Cart</button>
          </div>
        </div>
      ))}
    </div>
  );
};

export default ProductList;




3.SHOPPING CART:

import React, { useState } from 'react';

const ShoppingCart = () => {
  const [cartItems, setCartItems] = useState([]);
  const addToCart = (product) => {
    const updatedCart = [...cartItems];
    const existingItem = updatedCart.find(item => item.id === product.id);

    if (existingItem) {
      existingItem.quantity++;
    } else {
      updatedCart.push({ ...product, quantity: 1 });
    }

    setCartItems(updatedCart);
  };

  const removeFromCart = (productId) => {
    const updatedCart = cartItems.filter(item => item.id !== productId);
    setCartItems(updatedCart);
  };

  return (
    <div>
      <h2>Shopping Cart</h2>
      {cartItems.length === 0 ? (
        <p>Your cart is empty</p>
      ) : (
        <div>
          {cartItems.map(item => (
            <div key={item.id}>
              <img src={item.image} alt={item.name} />
              <h3>{item.name}</h3>
              <p>Price: ${item.price}</p>
              <p>Quantity: {item.quantity}</p>
              <button onClick={() => removeFromCart(item.id)}>Remove</button>
            </div>
          ))}
          <button>Proceed to Checkout</button>
        </div>
      )}
    </div>
  );
};

export default ShoppingCart;




4.CHECKOUT PROCESS:

import React, { useState } from 'react';

const Checkout = () => {
  const [step, setStep] = useState(1);
  const [shippingAddress, setShippingAddress] = useState('');
  const [paymentDetails, setPaymentDetails] = useState('');

  const handleNextStep = () => {
    setStep(step + 1);
  };

  const handlePreviousStep = () => {
    setStep(step - 1);
  };

  const handleAddressSubmit = (event) => {
    event.preventDefault();
    handleNextStep();
  };

  const handlePaymentSubmit = (event) => {
    event.preventDefault();
    handleNextStep();
  };

  return (
    <div>
      {step === 1 && (
        <form onSubmit={handleAddressSubmit}>
          <h2>Step 1: Shipping Address</h2>
          <input
            type="text"
            value={shippingAddress}
            onChange={(e) => setShippingAddress(e.target.value)}
            placeholder="Enter shipping address"
          />
          <button type="submit">Next</button>
        </form>
      )}
      {step === 2 && (
        <form onSubmit={handlePaymentSubmit}>
          <h2>Step 2: Payment Details</h2>
          <input
            type="text"
            value={paymentDetails}
            onChange={(e) => setPaymentDetails(e.target.value)}
            placeholder="Enter payment details"
          />
          <button onClick={handlePreviousStep}>Previous</button>
          <button type="submit">Next</button>
        </form>
      )}
      {step === 3 && (
        <div>
          <h2>Step 3: Confirm Order</h2>
          <p>Shipping Address: {shippingAddress}</p>
          <p>Payment Details: {paymentDetails}</p>
          <button onClick={handlePreviousStep}>Previous</button>
          <button>Place Order</button>
        </div>
      )}
    </div>
  );
};

export default Checkout;




5.PAYMENT GATEWAY:
import React, { useState } from 'react';

const Checkout = () => {
  const [step, setStep] = useState(1);
  const [shippingAddress, setShippingAddress] = useState('');
  const [paymentDetails, setPaymentDetails] = useState('');

  const handleNextStep = () => {
    setStep(step + 1);
  };

  const handlePreviousStep = () => {
    setStep(step - 1);
  };

  const handleAddressSubmit = (event) => {
    event.preventDefault();
    handleNextStep();
  };

  const handlePaymentSubmit = (event) => {
    event.preventDefault();
    
    handleNextStep();
  };

  return (
    <div>
      {step === 1 && (
        <form onSubmit={handleAddressSubmit}>
          <h2>Step 1: Shipping Address</h2>
          <input
            type="text"
            value={shippingAddress}
            onChange={(e) => setShippingAddress(e.target.value)}
            placeholder="Enter shipping address"
          />
          <button type="submit">Next</button>
        </form>
      )}
      {step === 2 && (
        <form onSubmit={handlePaymentSubmit}>
          <h2>Step 2: Payment Details</h2>
          <input
            type="text"
            value={paymentDetails}
            onChange={(e) => setPaymentDetails(e.target.value)}
            placeholder="Enter payment details"
          />
          <button onClick={handlePreviousStep}>Previous</button>
          <button type="submit">Next</button>
        </form>
      )}
      {step === 3 && (
        <div>
          <h2>Step 3: Confirm Order</h2>
          <p>Shipping Address: {shippingAddress}</p>
          <p>Payment Details: {paymentDetails}</p>
          <button onClick={handlePreviousStep}>Previous</button>
          <button>Place Order</button>
        </div>
      )}
    </div>
  );
};

export default Checkout;


6.ORDER HISTORY:


import React, { useState, useEffect } from 'react';

const OrderHistory = ({ userId }) => {
  const [orders, setOrders] = useState([]);

  useEffect(() => {
    const fetchOrderHistory = async () => {
      try {
        const response = await fetch(YOUR_API_ENDPOINT/orders?userId=${userId});
        const data = await response.json();
        setOrders(data.orders);
      } catch (error) {
        console.error('Error fetching order history:', error);
      }
    };

    fetchOrderHistory();
  }, [userId]);

  return (
    <div>
      <h2>Order History</h2>
      {orders.length > 0 ? (
        <div>
          {orders.map(order => (
            <div key={order.id}>
              <p>Order ID: {order.id}</p>
              <p>Date: {order.date}</p>
              <p>Status: {order.status}</p>
              {/* Display order items */}
              <ul>
                {order.items.map(item => (
                  <li key={item.id}>
                    {item.name} - Quantity: {item.quantity} - Price: ${item.price}
                  </li>
                ))}
              </ul>
              <hr />
            </div>
          ))}
        </div>
      ) : (
        <p>No orders found.</p>
      )}
    </div>
  );
};

export default OrderHistory;


7.SEARCHA ND FILTERS:

import React, { useState } from 'react';

const GroceryPortal = ({ products }) => {
  const [searchTerm, setSearchTerm] = useState('');
  const [categoryFilter, setCategoryFilter] = useState('');

  const handleSearchChange = event => {
    setSearchTerm(event.target.value);
  };

  const handleCategoryChange = event => {
    setCategoryFilter(event.target.value);
  };

  const filteredProducts = products.filter(product => {
    // Filtering by search term and category
    return (
      product.name.toLowerCase().includes(searchTerm.toLowerCase()) &&
      (categoryFilter === '' || product.category === categoryFilter)
    );
  });

  return (
    <div>
      <input
        type="text"
        placeholder="Search products..."
        value={searchTerm}
        onChange={handleSearchChange}
      />
      <select value={categoryFilter} onChange={handleCategoryChange}>
        <option value="">All Categories</option>
        <option value="fruits">Fruits</option>
        <option value="vegetables">Vegetables</option>
        {/* Add other categories */}
      </select>

      <div>
        {filteredProducts.map(product => (
          <div key={product.id}>
            <img src={product.image} alt={product.name} />
            <h3>{product.name}</h3>
            <p>{product.description}</p>
            <p>${product.price}</p>
            {/* Add to cart button */}
          </div>
        ))}
      </div>
    </div>
  );
};

export default GroceryPortal;


APP.JS

import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import Auth from './components/Auth'; // Placeholder for authentication
import ProductList from './components/ProductList'; // Placeholder for product listing
import ShoppingCart from './components/ShoppingCart'; // Placeholder for shopping cart
import Checkout from './components/Checkout'; // Placeholder for checkout process
import PaymentGateway from './components/PaymentGateway'; // Placeholder for payment gateway
import OrderHistory from './components/OrderHistory'; // Placeholder for order history
import SearchAndFilters from './components/SearchAndFilters'; // Placeholder for search and filters

const App = () => {
  const [user, setUser] = useState(null);
  const [products, setProducts] = useState([]); // Placeholder for product data
  const [cart, setCart] = useState([]); // Placeholder for shopping cart data
  const [orders, setOrders] = useState([]); // Placeholder for order history data

  useEffect(() => {
   
  }, []);

  return (
    <Router>
      <Switch>
        <Route path="/login">
          <Auth setUser={setUser} /> {/* Pass setUser function to handle authentication */}
        </Route>
        <Route path="/products">
          <ProductList products={products} /> {/* Pass product data to ProductList component */}
        </Route>
        <Route path="/cart">
          <ShoppingCart cart={cart} setCart={setCart} /> {/* Pass cart data and functions */}
        </Route>
        <Route path="/checkout">
          <Checkout cart={cart} setUser={setUser} /> {/* Pass cart and setUser for checkout */}
        </Route>
        <Route path="/payment">
          <PaymentGateway user={user} cart={cart} /> {/* Pass user and cart for payment */}
        </Route>
        <Route path="/orders">
          <OrderHistory orders={orders} /> {/* Pass order history data */}
        </Route>
        <Route path="/search">
          <SearchAndFilters products={products} /> {/* Pass products for search and filters */}
        </Route>
        <Route exact path="/">
          {/* Homepage or landing page */}
        </Route>
      </Switch>
    </Router>
  );
};

export default App;



